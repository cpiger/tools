#  ======================================================================================
#  File         : protoc_rule_s.mk
#  Author       : Wu Jie 
#  Last Change  : 03/20/2012 | 14:49:47 PM | Tuesday,March
#  Description  : 
#  ======================================================================================

# /////////////////////////////////////////////////////////////////////////////
#  Pre-generate Target
# /////////////////////////////////////////////////////////////////////////////

#  ------------------------------------------------------------------ 
#  Desc: Out Directory
#  ------------------------------------------------------------------ 

OutDir ?= $(CWD)/_build/protogen/

#  ------------------------------------------------------------------ 
#  Desc: Include
#  ------------------------------------------------------------------ 

# TODO: ??? where is include?

#  ------------------------------------------------------------------ 
#  Desc: Source
#  ------------------------------------------------------------------ 

#  ======================================================== 
#  Source Files With Full Path
#  ======================================================== 

FullPath_Srcs := $(wildcard $(addsuffix /*.proto,$(SrcDirs)))

#  DISABLE { 
#  ======================================================== 
#  Source Files
#  ======================================================== 

#  Srcs := $(notdir $(FullPath_Srcs))
#  } DISABLE end 

#  ------------------------------------------------------------------ 
#  Desc: Object
#  ------------------------------------------------------------------ 

#  ======================================================== 
#  Object File Output Path
#  ======================================================== 

GenDir := $(OutDir)

#  ======================================================== 
#  Object File Output Names
#  ======================================================== 

GenObjs := $(patsubst %.proto,%.java,$(FullPath_Srcs))

#  ======================================================== 
#  Object File With Full Path
#  ======================================================== 

FullPath_GenObjs := $(addprefix $(GenDir)/,$(GenObjs))

#  ------------------------------------------------------------------ 
#  Desc: Logs
#  ------------------------------------------------------------------ 

#  ======================================================== 
#  Error File Output Path
#  ======================================================== 

ErrDir ?= $(OutDir)/logs/errors
FullPath_Errs := $(ErrDir)/$(Project).err
ErrLogName := ErrorLog.err

# /////////////////////////////////////////////////////////////////////////////
# Generate Flag
# /////////////////////////////////////////////////////////////////////////////

#  ------------------------------------------------------------------ 
#  Desc: includes
#  ------------------------------------------------------------------ 

Flag_Inc := $(addprefix -I,$(IncDirs))

#  ------------------------------------------------------------------ 
#  Desc: Compile Flag
#  ------------------------------------------------------------------ 

CFlags := $(Flag_Inc)

#  ------------------------------------------------------------------ 
#  Desc: VPATH
#  ------------------------------------------------------------------ 

VPATH := $(IncDirs)
VPATH += $(SrcDirs)
VPATH += $(TargetDir)

#  ------------------------------------------------------------------ 
#  Desc: MARKS to create directory enter/exit able error log
#  ------------------------------------------------------------------ 

ifeq ($(CURRENT_OS),Linux)
OPEN_MARK := "<<<<<<"
CLOSE_MARK := ">>>>>>"
PROJECT_MARK := \'$(Project)\'
else
OPEN_MARK := ^<^<^<^<^<^<
CLOSE_MARK := ^>^>^>^>^>^>
PROJECT_MARK := '$(Project)'
endif

# /////////////////////////////////////////////////////////////////////////////
#  Rules
# /////////////////////////////////////////////////////////////////////////////

#  ------------------------------------------------------------------ 
#  Desc: All Rules
#  ------------------------------------------------------------------ 

.PHONY: all clean-all rebuild
all: |clean-errs $(FullPath_GenObjs)
clean-all: |clean-objs clean-errs
rebuild: |clean-all all

#  ------------------------------------------------------------------ 
#  Desc: Object Rules
#  ------------------------------------------------------------------ 

.PHONY: objs clean-objs rebuild-objs $(GenObjs)

#  ======================================================== 
#  all
#  ======================================================== 

rebuild-objs: |clean-objs objs
objs: $(FullPath_GenObjs)
clean-objs:
	$(ECHO) -------------------
	$(ECHO) delete objs:
	$(ECHO) -------------------
ifeq ($(CURRENT_OS),Linux)
	@for item in $(FullPath_GenObjs); do echo "    |--"   $$item; done
else
	@for %%i in ($(FullPath_GenObjs)) do (echo     ^|--   %%i)
endif
	$(RM) $(FullPath_GenObjs)

#  ======================================================== 
#  single
#  ======================================================== 

$(GenObjs):
	$(SMAKE) -f$(Project).mk $(GenDir)/$@
clean-%.java:
	$(ECHO) delete $(GenDir)/$*.java
	$(RM) $(GenDir)/$*.java

#  ======================================================== 
#  commands-objs
#  ======================================================== 

$(GenDir)/%.java: %.proto
	$(MKDIR) $(GenDir)
	$(MKDIR) $(ErrDir)
	$(MKDIR) $(dir $@)
	$(ECHO) compiling $<...
	$(ECHO_EMPTY_LINE) > $(ErrDir)/$(ErrLogName)
	$(ECHO) $(OPEN_MARK) $*.proto: $(PROJECT_MARK) >> $(ErrDir)/$(ErrLogName)
	$(CC) $(CFlags) --java_out=$(OutDir) --error_format=gcc $< 2>>$(ErrDir)/$(ErrLogName) 
	$(ECHO) $(CLOSE_MARK) >> $(ErrDir)/$(ErrLogName)
	$(CAT) $(ErrDir)/$(ErrLogName) >> $(ErrDir)/$(Project).err

#  ------------------------------------------------------------------ 
#  Desc: Output Rules
#  ------------------------------------------------------------------ 

.PHONY: clean-errs

#  ======================================================== 
#  all
#  ======================================================== 

clean-errs:
	$(ECHO) -------------------
	$(ECHO) delete errs:
	$(ECHO) -------------------
ifneq ($(FullPath_Errs),)
ifeq ($(CURRENT_OS),Linux)
	@for item in $(FullPath_Errs); do echo "    |--"   $$item; done
else
	@for %%i in ($(FullPath_Errs)) do (echo     ^|--   %%i)
endif
else
	$(ECHO) "    |--"
endif
	$(RM) $(FullPath_Errs)


